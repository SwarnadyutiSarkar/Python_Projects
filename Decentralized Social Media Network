<!-- File: index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Decentralized Social Media</title>
    <script src="https://cdn.jsdelivr.net/npm/web3/dist/web3.min.js"></script>
</head>
<body>
    <h1>Decentralized Social Media Network</h1>
    <form id="postForm">
        <input type="text" id="content" placeholder="What's on your mind?" required>
        <button type="submit">Post</button>
    </form>
    <div id="posts"></div>

    <script>
        let web3;
        let contract;
        const contractAddress = 'YOUR_CONTRACT_ADDRESS';
        const abi = [/* Your Contract ABI */];

        async function init() {
            if (typeof window.ethereum !== 'undefined') {
                web3 = new Web3(window.ethereum);
                await window.ethereum.request({ method: 'eth_requestAccounts' });
                contract = new web3.eth.Contract(abi, contractAddress);
                loadPosts();
            } else {
                alert('Please install MetaMask to use this app');
            }
        }

        async function loadPosts() {
            const postsCount = await contract.methods.getPostsCount().call();
            const postsDiv = document.getElementById('posts');
            postsDiv.innerHTML = '';
            for (let i = 0; i < postsCount; i++) {
                const post = await contract.methods.posts(i).call();
                const div = document.createElement('div');
                div.textContent = post.content;
                postsDiv.appendChild(div);
            }
        }

        document.getElementById('postForm').onsubmit = async (e) => {
            e.preventDefault();
            const content = document.getElementById('content').value;
            const accounts = await web3.eth.getAccounts();
            await contract.methods.createPost(content).send({ from: accounts[0] });
            document.getElementById('postForm').reset();
            loadPosts();
        };

        window.onload = init;
    </script>
</body>
</html>

-----------------
// File: SocialMedia.sol
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SocialMedia {
    struct Post {
        string content;
    }

    Post[] public posts;

    function createPost(string memory _content) public {
        posts.push(Post(_content));
    }

    function getPostsCount() public view returns (uint) {
        return posts.length;
    }

    function posts(uint index) public view returns (Post memory) {
        return posts[index];
    }
}
