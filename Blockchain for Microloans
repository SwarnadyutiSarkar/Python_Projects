// Import the IPFS library
const { create } = require('ipfs-http-client');

// Initialize IPFS client
const ipfs = create({ url: 'https://ipfs.infura.io:5001/api/v0' });

// Function to create a microloan request
async function createMicroloanRequest(borrower, amount, interestRate, duration) {
    const loanRequest = {
        borrower,
        amount,
        interestRate,
        duration,
        status: 'pending',
        timestamp: new Date().toISOString(),
    };

    const dataBuffer = Buffer.from(JSON.stringify(loanRequest));

    // Upload loan request to IPFS
    const result = await ipfs.add(dataBuffer);
    console.log('Microloan request uploaded to IPFS:', result.path);
    return result.path; // Return the IPFS hash
}

// Function to fetch a loan request by IPFS hash
async function fetchLoanRequest(ipfsHash) {
    const stream = ipfs.cat(ipfsHash);
    let data = '';

    for await (const chunk of stream) {
        data += chunk.toString();
    }

    return JSON.parse(data);
}

// Function to approve a loan
async function approveLoan(ipfsHash) {
    const loanRequest = await fetchLoanRequest(ipfsHash);
    loanRequest.status = 'approved';
    
    const dataBuffer = Buffer.from(JSON.stringify(loanRequest));
    const result = await ipfs.add(dataBuffer);
    console.log('Microloan request updated to approved:', result.path);
    return result.path;
}

// Example usage
(async () => {
    // Create a microloan request
    const loanHash = await createMicroloanRequest('Alice', 100, 5, '30 days');

    // Fetch the loan request
    const loanInfo = await fetchLoanRequest(loanHash);
    console.log('Fetched Loan Request:', loanInfo);

    // Approve the loan
    const updatedLoanHash = await approveLoan(loanHash);
    console.log('Updated Loan Hash:', updatedLoanHash);
})();
