// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract PersonalDataMarketplace {
    struct DataListing {
        uint id;
        address owner;
        string title;
        string description;
        uint price;
        bool sold;
    }

    mapping(uint => DataListing) public listings;
    uint public listingsCount;

    event DataListed(uint id, address owner, string title, string description, uint price);
    event DataSold(uint id, address buyer);

    function listData(string memory _title, string memory _description, uint _price) public {
        listingsCount++;
        listings[listingsCount] = DataListing(listingsCount, msg.sender, _title, _description, _price, false);
        emit DataListed(listingsCount, msg.sender, _title, _description, _price);
    }

    function buyData(uint _id) public payable {
        DataListing storage listing = listings[_id];
        require(msg.value == listing.price, "Incorrect price");
        require(!listing.sold, "Data already sold");
        listing.owner = msg.sender;
        listing.sold = true;
        emit DataSold(_id, msg.sender);
    }
}
